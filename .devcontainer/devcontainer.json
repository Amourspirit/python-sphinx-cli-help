{
    "name": "Sphinx-CLI-Help",
    "dockerComposeFile": "docker-compose.yml",
    "service": "sphinx_cli_help",
    "workspaceFolder": "/workspace/sphinx-cli-help",
    // "build": {
    //     // "dockerfile": "Dockerfile"
    //     "dockerComposeFile": "docker-compose.yml"
    // },
    // ðŸ‘‡ Features to add to the Dev Container. More info: https://containers.dev/implementors/features.
    // "features": {},
    // ðŸ‘‡ Use 'forwardPorts' to make a list of ports inside the container available locally.
    // "forwardPorts": [],
    // ðŸ‘‡ Use 'postCreateCommand' to run commands after the container is created.
    // "postCreateCommand": "",
    // Cache extensions in a volume to speed up dev container rebuilds.
    "mounts": [
		"source=vscode-extensions,target=/root/.vscode-server/extensions,type=volume"
	],
    // ðŸ‘‡ Configure tool-specific properties.
    "customizations": {
        "vscode": {
            "extensions": [
                "ms-python.python",
                "njpwerner.autodocstring"
            ]
        }
    },
    // ðŸ‘‡ Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
    "remoteUser": "root",
    // "initializeCommand": "echo $PWD && if which git >/dev/null && [ x\"${HOME}\" != \"x\" ] && [ -n \"$(git config --global user.name)\" ] && [ -n \"$(git config --global user.email)\" ]; then echo \"LOCAL_GIT_AUTHOR_NAME=$(git config --global user.name)\nLOCAL_GIT_AUTHOR_EMAIL=$(git config --global user.email)\" > .devcontainer/.env || true; else echo \"LOCAL_GIT_AUTHOR_NAME=\"\"\nLOCAL_GIT_AUTHOR_EMAIL=\"\"\" > .devcontainer/.env || true; fi",
    "postCreateCommand": "bash /usr/local/bin/startup.sh"
}